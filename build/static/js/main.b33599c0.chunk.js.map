{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","web-image.png","SocialFollow.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","isPresaleAllowed","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","networkId","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","SocialFollow","className","href","icon","faTelegram","size","faDiscord","faTwitter","faInstagram","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","isWhitelisted","setIsWhitelisted","startOnTime","currentTime","Math","floor","Date","now","preSaleTime","setPreSaleTime","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","checkIfWhitelisted","result","whitelisted","checkForPresaleUser","setTimeout","forEach","elm","name","timeData","outputs","claimNFTs","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","alert","getData","getConfig","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","length","substring","Number","onClick","e","preventDefault","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","transform","width","textTransform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b33599c0.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n  isPresaleAllowed : false\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n      case \"CHECK-FOR-PRESALE-USER\" :\r\n        return {\r\n          ...state,\r\n          isPresaleAllowed : action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const checkPresaleUser = (payload) => {\r\n  return {\r\n    type: \"CHECK-FOR-PRESALE-USER\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = 80001   //to check the checkpresale function\r\n        await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/web-image.d2928423.png\";","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTelegram,\r\n  faDiscord,\r\n  faTwitter,\r\n  faInstagram\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default function SocialFollow() {\r\n  return (\r\n    <div className=\"social-container\">\r\n      <h3>Socials</h3>\r\n      <a\r\n        href=\"https://t.me/KITTYDINGER\"\r\n        className=\"Telegram social\"\r\n      >\r\n        <FontAwesomeIcon icon={faTelegram} size=\"1x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://discord.com/invite/evHSXcgba9\"\r\n        className=\"Discord social\"\r\n      >\r\n        <FontAwesomeIcon icon={faDiscord} size=\"1x\" />\r\n      </a>\r\n      <a href=\"https://twitter.com/KittyDinger?s=20\" className=\"twitter social\">\r\n        <FontAwesomeIcon icon={faTwitter} size=\"1x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://www.instagram.com/theschrodingerofficial/?utm_medium=copy_link\"\r\n        className=\"instagram social\"\r\n      >\r\n        <FontAwesomeIcon icon={faInstagram} size=\"1x\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect,checkPresaleUser } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport webimage from \"./web-image.png\";\r\nimport SocialFollow from \"./SocialFollow\";\r\nimport \"./App.css\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const smartContract = useSelector((state) => state.blockchain.smartContract);\r\n  const isPresaleAllowed = useSelector((state) => state.blockchain.isPresaleAllowed);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [isWhitelisted, setIsWhitelisted] = useState(true);\r\n  const [preSaleTime, setPreSaleTime] = useState({\r\n    startOnTime : 0,\r\n    currentTime : Math.floor(Date.now() / 1000)\r\n  })\r\n\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const checkIfWhitelisted = async () => {\r\n    let result = blockchain.smartContract.methods.whitelisted(\r\n      blockchain.account\r\n    );\r\n    setIsWhitelisted(result);\r\n  };\r\n\r\n  const checkForPresaleUser = async () => {\r\n    if (isWhitelisted) {\r\n      setTimeout(()=> {\r\n        smartContract && smartContract[\"_jsonInterface\"].forEach((elm)=> {\r\n        if(elm.name === \"saleStartsOn\") {\r\n          const timeData = {startOnTime : elm.outputs[0].name, currentTime : Math.floor(Date.now() / 1000)}\r\n          setPreSaleTime(timeData)\r\n          if(elm.outputs[0].name - Math.floor(Date.now() / 1000) > 0){\r\n          dispatch(checkPresaleUser(true))\r\n          }\r\n        }})\r\n      }, 2000)\r\n    }}\r\n\r\n  const claimNFTs = () => {\r\n    checkIfWhitelisted();\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    if (!isWhitelisted) {\r\n      alert(\"You are not whitelisted to mint NFTs.\");\r\n      return;\r\n    }\r\n\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 50) {\r\n      newMintAmount = 50;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n    connect()(dispatch)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   getWhitelistedAddress();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  useEffect(()=> {\r\n    checkForPresaleUser()\r\n    },[isWhitelisted])\r\n    \r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.jpg\" : null}\r\n      >\r\n        <a href={CONFIG.MARKETPLACE_LINK}>\r\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n        </a>\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              backgroundColor: \"var(--accent)\",\r\n              padding: 24,\r\n              borderRadius: 24,\r\n              border: \"4px dashed var(--secondary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <span\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {/* <StyledButton\r\n                onClick={(e) => {\r\n                  window.open(\"theschrodinger.com\", \"_blank\");\r\n                \r\n\r\n                }}\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n              >\r\n                Roadmap\r\n              </StyledButton>\r\n              <StyledButton\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n                onClick={(e) => {\r\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\r\n                }}\r\n              >\r\n                {CONFIG.MARKETPLACE}\r\n              </StyledButton> */}\r\n            </span>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          !isPresaleAllowed? (preSaleTime.startOnTime < preSaleTime.currentTime ) && claimNFTs() : claimNFTs()\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft && isWhitelisted ? \"BUSY\" : \"BUY\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg\r\n              alt={\"example\"}\r\n              src={\"/config/images/example.gif\"}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to the right network (\r\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\r\n            Once you make the purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"80%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              textTransform: \"uppercase\",\r\n              padding: \"8px\",\r\n              fontSize: \"50px\",\r\n              color: \"var(--secondary)\",\r\n            }}\r\n          >\r\n            KittyDinger\r\n          </s.TextDescription>\r\n\r\n          <div>\r\n            <div className=\"myImage\"> </div>\r\n          </div>\r\n\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: \"25px\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            KittyDinger may kook like a cute cat on the outside but behind the\r\n            cute exterior lies a fearsome fighter\r\n          </s.TextDescription>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              textTransform: \"uppercase\",\r\n              padding: \"8px\",\r\n              fontSize: \"50px\",\r\n              color: \"var(--secondary)\",\r\n            }}\r\n          >\r\n            MINT $KITTIES\r\n          </s.TextDescription>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"left\",\r\n              fontSize: \"25px\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            By minting you will receive $KITTIES, which can be used in game for\r\n            a variety of purposes.<br></br>- Choose the number of $KITTIES you\r\n            wish to mint, then click on the mint button.<br></br>- A maximum of\r\n            12 $KITTIES can be minted per wallet.<br></br>- There will be a total\r\n            of 3000 $KITTIES available for minting.<br></br>\r\n            Current price: 0.07 ETH + Gas Fee<br></br>\r\n            <br></br>\r\n            <SocialFollow />\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport SocialFollow from \"./SocialFollow\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}